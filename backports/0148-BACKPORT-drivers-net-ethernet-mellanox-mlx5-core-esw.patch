From: Chris Mi <chrism@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/eswitch.h

Change-Id: I25cdfbf403df0e18278e4e5487fcb42af1c118a6
---
 drivers/net/ethernet/mellanox/mlx5/core/eswitch.h | 36 +++++++++++++++++++----
 1 file changed, 30 insertions(+), 6 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@ -38,6 +38,7 @@
 #include <linux/atomic.h>
 #include <linux/if_vlan.h>
 #include <linux/bitmap.h>
+#include <linux/hashtable.h>
 #include <net/devlink.h>
 #include <linux/mlx5/device.h>
 #include <linux/mlx5/eswitch.h>
@@ -196,9 +197,13 @@ struct mlx5_esw_offload {
 	spinlock_t encap_tbl_lock; /* protects encap_tbl */
 	struct list_head peer_flows;
 	struct mutex peer_mutex;
+#ifdef HAVE_NET_TC_ACT_TC_TUNNEL_KEY_H
 	DECLARE_HASHTABLE(encap_tbl, 8);
+#endif
 	spinlock_t mod_hdr_tbl_lock; /* protects mod_hdr_tbl */
+#ifdef HAVE_TCF_PEDIT_TCFP_KEYS_EX
 	DECLARE_HASHTABLE(mod_hdr_tbl, 8);
+#endif
 	u8 inline_mode;
 	atomic64_t num_flows;
 	u8 encap;
@@ -225,7 +230,9 @@ struct mlx5_esw_handler {
 	atomic_t		in_progress;
 	struct work_struct      start_handler;
 	struct work_struct      stop_handler;
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
 	struct netlink_ext_ack	*extack;
+#endif
 };
 
 struct mlx5_vgroup {
@@ -322,8 +329,10 @@ int mlx5_eswitch_set_vport_rate(struct m
 				u32 max_rate, u32 min_rate);
 int mlx5_eswitch_set_vepa(struct mlx5_eswitch *esw, u8 setting);
 int mlx5_eswitch_get_vepa(struct mlx5_eswitch *esw, u8 *setting);
+#ifdef HAVE_IFLA_VF_INFO
 int mlx5_eswitch_get_vport_config(struct mlx5_eswitch *esw,
 				  int vport, struct ifla_vf_info *ivi);
+#endif
 int mlx5_eswitch_get_vport_stats(struct mlx5_eswitch *esw,
 				 int vport,
 				 struct ifla_vf_stats *vf_stats);
@@ -331,6 +340,7 @@ int mlx5_eswitch_vport_update_group(stru
 				    u32 group_id);
 int mlx5_eswitch_set_vgroup_rate(struct mlx5_eswitch *esw, int group_id,
 				 u32 max_rate);
+#ifndef HAVE_STRUCT_IFLA_VF_STATS_TX_BROADCAST
 struct ifla_vf_stats_backport {
 	__u64 tx_broadcast;
 	__u64 tx_multicast;
@@ -339,6 +349,7 @@ struct ifla_vf_stats_backport {
 int mlx5_eswitch_get_vport_stats_backport(struct mlx5_eswitch *esw,
 					  int vport,
 					  struct ifla_vf_stats_backport *vf_stats_backport);
+#endif
 void mlx5_eswitch_del_send_to_vport_rule(struct mlx5_flow_handle *rule);
 int mlx5_eswitch_query_vport_drop_stats(struct mlx5_core_dev *dev,
 					int vport_idx,
@@ -420,24 +431,37 @@ struct mlx5_esw_flow_attr {
 	u32	chain;
 	u16	prio;
 	u32	dest_chain;
+#ifdef HAVE_TCF_TUNNEL_INFO
 	struct mlx5e_tc_flow_parse_attr *parse_attr;
+#endif
 };
 
-int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode,
-				  struct netlink_ext_ack *extack);
+int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+				  , struct netlink_ext_ack *extack
+#endif
+				  );
 int mlx5_devlink_eswitch_mode_get(struct devlink *devlink, u16 *mode);
-int mlx5_devlink_eswitch_inline_mode_set(struct devlink *devlink, u8 mode,
-					 struct netlink_ext_ack *extack);
+int mlx5_devlink_eswitch_inline_mode_set(struct devlink *devlink, u8 mode
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+					, struct netlink_ext_ack *extack
+#endif
+					);
 int mlx5_devlink_eswitch_inline_mode_get(struct devlink *devlink, u8 *mode);
 int mlx5_eswitch_inline_mode_get(struct mlx5_eswitch *esw, int nvfs, u8 *mode);
+int mlx5_eswitch_compat_sysfs_init(struct net_device *netdev);
+void mlx5_eswitch_compat_sysfs_cleanup(struct net_device *netdev);
 
 int mlx5_eswitch_vport_modify_other_hca_cap_roce(struct mlx5_eswitch *esw,
 						 int vport_num, bool value);
 int mlx5_eswitch_vport_get_other_hca_cap_roce(struct mlx5_eswitch *esw,
 					      int vport_num, bool *value);
 
-int mlx5_devlink_eswitch_encap_mode_set(struct devlink *devlink, u8 encap,
-					struct netlink_ext_ack *extack);
+int mlx5_devlink_eswitch_encap_mode_set(struct devlink *devlink, u8 encap
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+					, struct netlink_ext_ack *extack
+#endif
+				       );
 int mlx5_devlink_eswitch_encap_mode_get(struct devlink *devlink, u8 *encap);
 void *mlx5_eswitch_get_uplink_priv(struct mlx5_eswitch *esw, u8 rep_type);
 
